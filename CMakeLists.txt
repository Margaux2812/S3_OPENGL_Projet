# //////////////////////////////////////////////////////////////////////////////////////
# /////////////////////////////////////  STANDARDS  ////////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

cmake_minimum_required(VERSION 2.8)

# //////////////////////////////////////////////////////////////////////////////////////
# ///////////////////////////////  CONFIGURATION PROJECT  //////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

project(WorldIMaker)

set(EXECUTABLE_NAME WorldIMaker)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

# //////////////////////////////////////////////////////////////////////////////////////
# ////////////////////////////////////  DEPENDENCIES  //////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

find_package(SDL REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(SDL_mixer REQUIRED)

# //////////////////////////////////////////////////////////////////////////////////////
# //////////////////////////////////////  INCLUDES  ////////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -O2 -std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG_INIT "-g")

## ------------------------------ For UPEM compilation ------------------------------ ##

if(UPEMLV)
    set(OPENGL_LIBRARIES /usr/lib/x86_64-linux-gnu/libGL.so.1)
endif(UPEMLV)

## ---------------------------------------------------------------------------------- ##

include_directories(
		${SDL_INCLUDE_DIR}
		${OPENGL_INCLUDE_DIR}
		${GLEW_INCLUDE_DIR} 
		${SDL_MIXER_INCLUDE_DIRS}
		lib/glimac/include
		lib/third-party/include
		)
set(ALL_LIBRARIES glimac ${SDL_LIBRARY} ${OPENGL_LIBRARIES} ${GLEW_LIBRARY} ${SDL_MIXER_LIBRARIES})
add_subdirectory(lib/glimac)

# //////////////////////////////////////////////////////////////////////////////////////
# ////////////////////////////////////  PROJECT FILES  /////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

file(GLOB_RECURSE SOURCE_FILES src/*.cpp)
file(GLOB_RECURSE HEADER_FILES include/*.hpp)
file(GLOB_RECURSE SHADER_FILES shaders/*.glsl)

# //////////////////////////////////////////////////////////////////////////////////////
# //////////////////////////////////////  EXECUTABLE  //////////////////////////////////
# //////////////////////////////////////////////////////////////////////////////////////

add_executable(${EXECUTABLE_NAME} ${SOURCE_FILES} ${HEADER_FILES} ${SHADER_FILES})

target_link_libraries(${EXECUTABLE_NAME} ${ALL_LIBRARIES})

file(COPY shaders DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY assets DESTINATION ${CMAKE_CURRENT_BINARY_DIR})